// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - XConnect XP0 Configuration            //
//                                                                            //
//  Run this configuration to install a single instance of XConnect.          //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //
{
    "Parameters": {
        // Parameters are values that may be passed when Install-SitecoreConfiguration is called.
        // Parameters must declare a Type and may declare a DefaultValue and Description.
        // Parameters with no DefaultValue are required when Install-SitecoreConfiguration is called.        
        "SiteName": {
            "Type": "string",
            "Description": "The name of the site to be deployed."
        },
		"CommerceServicesPrefix": {
            "Type": "string",
            "Description": "The prefix for the commerce services"
        },
		"CommerceServicesPostfix": {
			"Type": "string",
			"DefaultValue": "_Sc9",
			"Description": "The Commerce Engine postfix for services names"
		},	
		"SystemDrive": {
			"Type": "string",
			"Description": "System Drive",
			"DefaultValue": "C:"
		},
		"WebsiteRootFolder": {
			"Type": "string",
			"Description": "Website root folder",
			"DefaultValue": "\\inetpub\\wwwroot\\"
		},
		"CommerceAuthoringServiceName": {
			"Type": "string",
			"Description": "The Commerce Engine postfix for services names"
		},
		"CommerceShopsServiceName": {
			"Type": "string",
			"Description": "The Commerce Engine postfix for services names"
		},
		"CommerceOpsServiceName": {
			"Type": "string",
			"Description": "The Commerce Engine postfix for services names"
		},
		"CommerceMinionsServiceName": {
			"Type": "string",
			"Description": "The Commerce Engine postfix for services names"
		},
		"BizFxAppName": {
			"Type": "string",
			"Description": "The Commerce Engine postfix for services names"
		},
		"IdentityServiceName": {
			"Type": "string",
			"Description": "The Commerce Engine postfix for services names"
		}
    },
    "Variables": {
        // Variables are values calculated in a configuration.
        // They can reference Parameters, other Variables, and config functions.
        // The prefix for shards created by the tool
        "Services.CommerceAuthoring.Name":        "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceAuthoringServiceName'), parameter('CommerceServicesPostfix')))]",
		"Services.CommerceMinions.Name":        "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceMinionsServiceName'), parameter('CommerceServicesPostfix')))]",
		"Services.CommerceOps.Name":        "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceOpsServiceName'), parameter('CommerceServicesPostfix')))]",
		"Services.CommerceShops.Name":        "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceShopsServiceName'), parameter('CommerceServicesPostfix')))]",
		"Services.BizFx.Name":        "[concat(parameter('CommerceServicesPrefix'), parameter('BizFxAppName'))]",
		"Services.IdentityServer.Name":        "[concat(parameter('CommerceServicesPrefix'), parameter('IdentityServiceName'))]",
		
		"Services.CommerceAuthoring.PhysicalPath":        "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('Services.CommerceAuthoring.Name')))]",
		"Services.CommerceMinions.PhysicalPath":         "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('Services.CommerceMinions.Name')))]",
		"Services.CommerceOps.PhysicalPath":         "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('Services.CommerceOps.Name')))]",
		"Services.CommerceShops.PhysicalPath":         "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('Services.CommerceShops.Name')))]",
		"Services.BizFx.PhysicalPath":         "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('Services.BizFx.Name')))]",
		"Services.IdentityServer.PhysicalPath":         "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('Services.IdentityServer.Name')))]"
    },
	"Modules": [ "ManageCommerceService" ],
    "Tasks": {
        // Tasks are separate units of work in a configuration.
        // Each task is an action that will be completed when Install-SitecoreConfiguration is called.
        // By default, tasks are applied in the order they are declared.
        // Tasks may reference Parameters, Variables, and config functions.
        "StopWebsite": {
            // Stops the website if it is running.
            "Type": "ManageWebsite",
            "Params": [
				{
					"Name": "[variable('Services.CommerceAuthoring.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.CommerceMinions.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.CommerceOps.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.CommerceShops.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.BizFx.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.IdentityServer.Name')]",
					"Action": "Stop"
				}
			]
        },
        "StopAppPool": {
            // Stops the app pool if it is running.
            "Type": "ManageAppPool",
            "Params": [
				{
					"Name": "[variable('Services.CommerceAuthoring.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.CommerceMinions.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.CommerceOps.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.CommerceShops.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.BizFx.Name')]",
					"Action": "Stop"
				},
				{
					"Name": "[variable('Services.IdentityServer.Name')]",
					"Action": "Stop"
				}
			]
        },
		"RemoveSites": {
			"Type": "ManageCommerceService",
			"Params": [
				{
					"Name": "[variable('Services.CommerceAuthoring.Name')]",
					"Action": "Remove-Website"
				},
				{
					"Name": "[variable('Services.CommerceMinions.Name')]",
					"Action": "Remove-Website"
				},
				{
					"Name": "[variable('Services.CommerceOps.Name')]",
					"Action": "Remove-Website"
				},
				{
					"Name": "[variable('Services.CommerceShops.Name')]",
					"Action": "Remove-Website"
				},
				{
					"Name": "[variable('Services.BizFx.Name')]",
					"Action": "Remove-Website"
				},
				{
					"Name": "[variable('Services.IdentityServer.Name')]",
					"Action": "Remove-Website"
				}
			]
		},
		"RemoveAppPools": {
			"Type": "ManageCommerceService",
			"Params": [
				{
					"Name": "[variable('Services.CommerceAuthoring.Name')]",
					"Action": "Remove-WebAppPool"
				},
				{
					"Name": "[variable('Services.CommerceMinions.Name')]",
					"Action": "Remove-WebAppPool"
				},
				{
					"Name": "[variable('Services.CommerceOps.Name')]",
					"Action": "Remove-WebAppPool"
				},
				{
					"Name": "[variable('Services.CommerceShops.Name')]",
					"Action": "Remove-WebAppPool"
				},
				{
					"Name": "[variable('Services.BizFx.Name')]",
					"Action": "Remove-WebAppPool"
				},
				{
					"Name": "[variable('Services.IdentityServer.Name')]",
					"Action": "Remove-WebAppPool"
				}
			]
		},
		"RemoveSiteFolders": {
			"Type": "ManageCommerceService",
			"Params": [
				{
					"Name": "Name",
					"PhysicalPath": "[variable('Services.CommerceAuthoring.PhysicalPath')]",
					"Action": "Remove-Item",
					"RestartIIS": false
				},
				{
					"Name": "Name",
					"PhysicalPath": "[variable('Services.CommerceMinions.PhysicalPath')]",
					"Action": "Remove-Item",
					"RestartIIS": false
				},
				{
					"Name": "Name",
					"PhysicalPath": "[variable('Services.CommerceOps.PhysicalPath')]",
					"Action": "Remove-Item",
					"RestartIIS": false
				},
				{
					"Name": "Name",
					"PhysicalPath": "[variable('Services.CommerceShops.PhysicalPath')]",
					"Action": "Remove-Item",
					"RestartIIS": false
				},
				{
					"Name": "Name",
					"PhysicalPath": "[variable('Services.BizFx.PhysicalPath')]",
					"Action": "Remove-Item",
					"RestartIIS": false
				},
				{
					"Name": "Name",
					"PhysicalPath": "[variable('Services.IdentityServer.PhysicalPath')]",
					"Action": "Remove-Item",
					"RestartIIS": false
				}
			]
		}
    }
}