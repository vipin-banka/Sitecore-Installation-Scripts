// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Deploy Sitecore IdentityServer        //
//                                                                            //
//  Run this configuration to deploy Sitecore IdentityServer.                 //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //
{
  "Parameters": {
	"CommerceServicesPrefix": { 
		"Type": "string", 
		"DefaultValue": "" 
	},
    "SitecoreIdentityServerZipPath": {
      "Type": "string",
      "Description": "Sitecore IdentityServer Zip Path"
    },
    "SitecoreDbServer": {
      "Type": "string",
      "Description": "Sitecore database server name"
    },
    "SitecoreCoreDbName": {
      "Type": "string",
      "Description": "Sitecore Core database name"
    },
    "UserAccount": {
      "Type": "psobject",
      "DefaultValue": {
        "UserName": "",
        "Domain": "$env:COMPUTERNAME",
        "Password": ""
      }
    },
    "RootCertFileName": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "SitecoreRootCert"
    },
    "SitecoreIdentityServerName": {
      "Type": "string",
      "Description": "Sitecore Identity Server name"
    },
    "SitecoreIdentityServicePort": {
      "Type": "string",
      "Description": "Sitecore Identity Service port",
	  "DefaultValue": "5050"
    },
    "SitecoreIdentityServiceCertificateName": {
      "Type": "string",
      "Description": "Sitecore Identity Service CertificateName",
	  "DefaultValue": "identity.server"
    },
    "SitecoreBizFxServicePort": {
      "Type": "string",
      "Description": "Sitecore BizFX Service Port"
    },	
	"SystemDrive": {
		"Type": "string",
		"Description": "System Drive",
		"DefaultValue": "C:"
	},
	"WebsiteRootFolder": {
		"Type": "string",
		"Description": "Website root folder",
		"DefaultValue": "\\inetpub\\wwwroot\\"
	},
    "RootCertPrefix": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "DO_NOT_TRUST_"
    },
    "RootCertStore": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "cert:\\LocalMachine\\Root"
    },
    "ClientCertStore": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "cert:\\LocalMachine\\My"
    }
  },
  "Variables": {
	"SitecoreIdentityServiceName": "[concat(parameter('CommerceServicesPrefix'), parameter('SitecoreIdentityServerName'))]",
    "SitecoreIdentityServerPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('SitecoreIdentityServiceName')))]",
    // The name dns name of the root certificate.
    "Root.Cert.DnsName": "[concat(parameter('RootCertPrefix'), parameter('RootCertFileName'))]",
    // The certificate store for the root certificate.
    "Root.Cert.Store": "[parameter('RootCertStore')]",
    "Security.CertificateName": "[parameter('SitecoreIdentityServiceCertificateName')]",
    "Security.CertificateStore": "[parameter('ClientCertStore')]",
    "Security.CertificateThumbprint": "[GetCertificateThumbprint(variable('Security.CertificateName'), variable('Security.CertificateStore'))]",
    "Security.CertificatePath": "[joinpath(variable('Security.CertificateStore'), variable('Security.CertificateThumbprint'))]"
  },
  "Modules": [
    "ManageCommerceService",
    "DeployCommerceContent",
    "WindowsLocalUser"
  ],
  "Tasks": {
    "StopSite": {
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('SitecoreIdentityServiceName')]",
        "Action": "Stop",
        "ErrorAction": "SilentlyContinue"
      }
    },
    "RemoveSite": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "[variable('SitecoreIdentityServiceName')]",
        "Action": "Remove-Website"
      }
    },
    "StopAppPool": {
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('SitecoreIdentityServiceName')]",
        "Action": "Stop",
        "ErrorAction": "SilentlyContinue"
      }
    },
    "RemoveAppPool": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "[variable('SitecoreIdentityServiceName')]",
        "Action": "Remove-WebAppPool"
      }
    },
    "RemoveSiteFolder": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "Name",
        "PhysicalPath": "[variable('SitecoreIdentityServerPhysicalPath')]",
        "Action": "Remove-Item"
      }
    },
    "DeployCommerceContent": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "SitecoreIdentityServer",
        "ServicesContentPath": "[parameter('SitecoreIdentityServerZipPath')]",
        "PhysicalPath": "[variable('SitecoreIdentityServerPhysicalPath')]",
        "SitecoreDbServer": "[parameter('SitecoreDbServer')]",
        "SitecoreCoreDbName": "[parameter('SitecoreCoreDbName')]",
        "UserAccount": "[parameter('UserAccount')]",
		"SitecoreBizFxServicePort": "[parameter('SitecoreBizFxServicePort')]"
      }
    },
    "CreatePaths": {
      "Type": "EnsurePath",
      "Params": {
        "Exists": [
          "[variable('SitecoreIdentityServerPhysicalPath')]"
        ]
      }
    },
    "CreateWebAppPool": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "[variable('SitecoreIdentityServiceName')]",
        "Action": "Create-WebAppPool",
        "UserAccount": "[parameter('UserAccount')]"
      }
    },
    "CreateWebsite": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "[variable('SitecoreIdentityServiceName')]",
        "Action": "Create-Website",
        "AppPoolName": "[variable('SitecoreIdentityServiceName')]",
        "PhysicalPath": "[variable('SitecoreIdentityServerPhysicalPath')]",
        "Port": "[parameter('SitecoreIdentityServicePort')]",
        "Signer": "[GetCertificate(variable('Root.Cert.DnsName'), variable('Root.Cert.Store'))]"
      }
    },
    "IssuingCertificate": {
      "Type": "IssuingCertificate",
      "Params": {
        "CertificateDnsName": "[variable('Security.CertificateName')]",
        "CertificatePassword": "sitecore",
        "CertificateStore": "[variable('Security.CertificateStore')]",
        "CertificateFriendlyName": "[variable('Security.CertificateName')]",
        "IDServerPath": "[variable('SitecoreIdentityServerPhysicalPath')]"
      }
    },
    "SetCertStorePermissions": {
      // Set permissions for the services to access the client certificate.
      "Type": "SetPermissions",
      "Params": {
        "Path": "[ResolveCertificatePath(variable('Security.CertificatePath'))]",
        "Rights": [
          {
            "User": "[parameter('UserAccount'))]",
            "FileSystemRights": [ "Read" ],
            "InheritanceFlags": [ "None" ]
          }
        ]
      }
    }
  }
}