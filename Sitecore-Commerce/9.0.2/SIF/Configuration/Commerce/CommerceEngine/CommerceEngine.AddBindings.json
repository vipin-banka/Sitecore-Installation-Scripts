// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Initialize Commerce Services          //
//                                                                            //
//  Run this configuration to initialize Commerce Services.                   //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //

{
  "Parameters": {
    "CommerceServicesPrefix": { 
		"Type": "string", 
		"DefaultValue": "" 
	},
	"ServiceName": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The Commerce Engine service name"
    },
	"CommerceServicesPostfix": {
      "Type": "string",
      "DefaultValue": "_Sc9",
      "Description": "The Commerce Engine postfix for services names"
    },
    "CommerceServicePort": {
      "Type": "string",
      "Description": "The name of the certificate to be created."
    },	
    "CertPath": {
      "Type": "string",
      "Description": "The physical path on disk where certificates will be stored.",
      "DefaultValue": "c:\\certificates"
    },
    "CommerceEngineHostHeaderName": {
      "Type": "string",
      "Description": "The name of the certificate to be created."
    },
    "RootCertPrefix": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "DO_NOT_TRUST_"
    },
    "RootCertFileName": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "SitecoreRootCert"
    },
    "RootCertStore": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "cert:\\LocalMachine\\Root"
    },
    "ClientCertStore": {
      "Type": "string",
      "Description": "The file name of the root certificate to be created.",
      "DefaultValue": "cert:\\LocalMachine\\My"
    }
  },
  "Variables": {
    "CommerceServiceName": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('ServiceName'), parameter('CommerceServicesPostfix')))]",    
	"CommerceServiceHostName": "[parameter('CommerceEngineHostHeaderName')]",	
	// The name dns name of the root certificate.
    "Root.Cert.DnsName": "[concat(parameter('RootCertPrefix'), parameter('RootCertFileName'))]",
    // The certificate store for the root certificate.
    "Root.Cert.Store": "[parameter('RootCertStore')]",
    // The certificate store for the client certificate.
    "Client.Cert.Store": "[parameter('ClientCertStore')]",	
    "Security.SSL.CertificateThumbprint": "[GetCertificateThumbprint(parameter('CommerceServiceHostName'), variable('Client.Cert.Store'))]"
  },
  "Modules": ["InitializeCommerce"],
  "Tasks": {
	"CreatePaths": {
      // Create the physical disk path.
      "Type": "EnsurePath",
      "Params": {
        "Exists": [
          "[parameter('CertPath')]"
        ]
      }
    },
	"CreateCommerceServieHostHeader": {
      // Sets a hostheader for the website.
      "Type": "HostHeader",
      "Params": {
        "HostName": "[variable('CommerceServiceHostName')]"
      }
    },    
    "CreateSignedCert": {
      // Create a certificate signed by the root authority.
      "Type": "NewSignedCertificate",
      "Params": {
        "Signer": "[GetCertificate(variable('Root.Cert.DnsName'), variable('Root.Cert.Store'))]",
        "Path": "[parameter('CertPath')]",
        "CertStoreLocation": "[variable('Client.Cert.Store')]",
        "Name": "[parameter('CommerceServiceHostName')]",
        "DnsName": "[parameter('CommerceServiceHostName')]"
      }
    },
    "StopWebsite": {
      // Stops the website if it is running.
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('CommerceServiceName')]",
        "Action": "Stop"
      }
    },
    "StopAppPool": {
      // Stops the app pool if it is running.
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[Variable('CommerceServiceName')]",
        "Action": "Stop"
      }
    },
    "CreateCommerceServiceBindingsWithThumprint": {
      // Configures the site bindings for the website.
      "Type": "WebBinding",
      "Params": {
        "SiteName": "[variable('CommerceServiceName')]",
        "Add": [
          {
            "HostHeader": "[variable('CommerceServiceHostName')]",
            "Protocol": "https",
            "SSLFlags": 1,
            "Thumbprint": "[variable('Security.SSL.CertificateThumbprint')]",
			"Port": "[parameter('CommerceServicePort')]"
          }
        ]
      }
    },
	//"CreateCommerceOpsBindings": {
    //  // Configures the site bindings for the website.
    //  "Type": "WebBinding",
    //  "Params": {
    //    "SiteName": "[variable('CommerceServiceName')]",
    //    "Add": [
    //      {
    //        "HostHeader": "[variable('CommerceServiceHostName')]",
    //        "Protocol": "http",
    //        "Port": "[parameter('CommerceServicePort')]" 
    //      } 
    //    ]
    //  }
    //},
    "StartAppPool": {
      // Starts the app pool.
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('CommerceServiceName')]",
        "Action": "Start"
      }
    },
    "StartWebsite": {
      // Starts the website.
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('CommerceServiceName')]",
        "Action": "Start"
      }
    }
  }
}