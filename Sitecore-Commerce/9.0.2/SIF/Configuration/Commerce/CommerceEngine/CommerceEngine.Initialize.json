// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Initialize Commerce Services          //
//                                                                            //
//  Run this configuration to initialize Commerce Services.                   //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //

{
  "Parameters": {
    "CommerceShopsServicesPort": {
      "Type": "string",
      "Description": "Commerce Shops Services port"
    },
    "SitecoreAdminAccount": {
      "Type": "psobject",
      "Description": "Sitecore Admin account."
    },
    "CommerceServicesPostfix": {
      "Type": "string",
      "DefaultValue": "_Sc9",
      "Description": "The Commerce Engine postfix for services names"
    },
	"CommerceServicesPrefix": { 
		"Type": "string", 
		"DefaultValue": "" 
	},
    "SitecoreIdentityServicePort": {
      "Type": "string",
      "Description": "Sitecore Identity Service port"
    },
	"CommerceAuthoringServiceName": {
		"Type": "string",
		"Description": "Commerce Authoring Service Name",
		"DefaultValue": "CommerceAuthoring_"
	},
	"CommerceShopsServiceName": {
		"Type": "string",
		"Description": "Commerce Shops Service Name",
		"DefaultValue": "CommerceShops_"
	},
	"CommerceMinionsServiceName": {
		"Type": "string",
		"Description": "Commerce Minions Service Name",
		"DefaultValue": "CommerceMinions_"
	},
	"CommerceOpsServiceName": {
		"Type": "string",
		"Description": "Commerce Ops Service Name",
		"DefaultValue": "CommerceOps_"
	},	
	"SystemDrive": {
		"Type": "string",
		"Description": "System Drive",
		"DefaultValue": "C:"
	},
	"WebsiteRootFolder": {
		"Type": "string",
		"Description": "Website root folder",
		"DefaultValue": "\\inetpub\\wwwroot\\"
	},
	"CommerceEngineHostHeaderName": {
      "Type": "string",
      "Description": "Sitecore Identity Service port"
      "DefaultValue": "localhost",
	}
  },
  "Variables": {
	"CommerceEngineBaseUrl": "[concat('https://', concat(parameter('CommerceEngineHostHeaderName'), ':'))]",
	"IdentityServerGetTokenUrl": "[concat(variable('CommerceEngineBaseUrl'), concat(parameter('SitecoreIdentityServicePort'), '/connect/token'))]",
    "CommerceOps": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceOpsServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceShops": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceShopsServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceAuthoring": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceAuthoringServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceMinions": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceMinionsServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceOpsPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceOps')))]",
    "CommerceShopsPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceShops')))]",
    "CommerceAuthoringPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceAuthoring')))]",
    "CommerceMinionsPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceMinions')))]",
    "UrlCommerceShopsServicesBootstrap": "[concat(variable('CommerceEngineBaseUrl'), concat(parameter('CommerceShopsServicesPort'), '/commerceops/Bootstrap()'))]",
    "InitializeParam": "/commerceops/InitializeEnvironment(environment='envNameValue')",
    "UrlInitializeEnvironment": "[concat(variable('CommerceEngineBaseUrl'), concat(parameter('CommerceShopsServicesPort'), variable('InitializeParam')))]",
    "EnsureSyncDefaultContentPathsParam": "/commerceops/EnsureSyncDefaultContentPaths(environment='envNameValue',shopName='CommerceEngineDefaultStorefront')",
    "UrlEnsureSyncDefaultContentPaths": "[concat(variable('CommerceEngineBaseUrl'), concat(parameter('CommerceShopsServicesPort'), variable('EnsureSyncDefaultContentPathsParam')))]",
    "UrlCheckCommandStatus": "[concat(variable('CommerceEngineBaseUrl'), concat(parameter('CommerceShopsServicesPort'), '/commerceops/CheckCommandStatus(taskId=taskIdValue)'))]"
  },
  "Modules": ["InitializeCommerce"],
  "Tasks": {
    "DisableCsrfValidation": {
      "Type": "DisableCsrfValidation",
      "Params": {
        "CommerceServicesPathCollection": [
          "[variable('CommerceOpsPhysicalPath')]",
          "[variable('CommerceShopsPhysicalPath')]",
          "[variable('CommerceAuthoringPhysicalPath')]",
          "[variable('CommerceMinionsPhysicalPath')]"
        ]
      }
    },
    "GetIdServerToken": {
      "Type": "GetIdServerToken",
      "Params": {
        "SitecoreAdminAccount": "[parameter('SitecoreAdminAccount')]",
        "UrlIdentityServerGetToken": "[variable('IdentityServerGetTokenUrl')]"
      }
    },
    "BootStrapCommerceServices": {
      "Type": "BootStrapCommerceServices",
      "Params": {
        "UrlCommerceShopsServicesBootstrap": "[variable('UrlCommerceShopsServicesBootstrap')]"
      }
    },
     "EnsureSyncDefaultContentPaths": {
       "Type": "EnsureSyncDefaultContentPaths",
       "Params": {
         "UrlEnsureSyncDefaultContentPaths": "[variable('UrlEnsureSyncDefaultContentPaths')]",
         "UrlCheckCommandStatus": "[variable('UrlCheckCommandStatus')]",
         "Environments": [
           "AdventureWorksAuthoring",
           "HabitatAuthoring"
         ]
       }
     },
    "InitializeCommerceServices": {
      "Type": "InitializeCommerceServices",
      "Params": {
        "UrlInitializeEnvironment": "[variable('UrlInitializeEnvironment')]",
        "UrlCheckCommandStatus": "[variable('UrlCheckCommandStatus')]",
        "Environments": [
          "AdventureWorksAuthoring",
          "HabitatAuthoring"
        ]
      }
    },
    "EnableCsrfValidation": {
      "Type": "EnableCsrfValidation",
      "Params": {
        "CommerceServicesPathCollection": [
          "[variable('CommerceOpsPhysicalPath')]",
          "[variable('CommerceShopsPhysicalPath')]",
          "[variable('CommerceAuthoringPhysicalPath')]",
          "[variable('CommerceMinionsPhysicalPath')]"
        ]
      }
    }
  }
}