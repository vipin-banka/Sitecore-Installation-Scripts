// ------------------------------------------------------------------------------ //
//         Sitecore Install Framework - Apply Commerce Engine certificate         //
//                                                                                //
//  Run this configuration to apply the Commerce Engine certificate.              //
//                                                                                //
//  NOTE: Only single line comments are accepted in configurations.               //
// ------------------------------------------------------------------------------ //
{
  "Parameters": {
    "EngineConnectIncludeDir": {
      "Type": "string",
      "Description": "The path to the Engine Connect App_Confign directory"
    },
    "CertificatePath": {
      "Type": "string",
      "Description": "The full path to the Commerce Engine certificate file."
    },
    "CommerceServicesPostfix": {
      "Type": "string",
      "DefaultValue": "_Sc9",
      "Description": "The Commerce Engine postfix for services names"
    },
    "CommerceAuthoringServicesPort": {
      "Type": "string",
      "Description": "Commerce Authoring Services port"
    },
	"CommerceServicesPrefix": { 
		"Type": "string", 
		"DefaultValue": "" 
	},
	"SystemDrive": {
		"Type": "string",
		"Description": "System Drive",
		"DefaultValue": "C:"
	},
	"WebsiteRootFolder": {
		"Type": "string",
		"Description": "Website root folder",
		"DefaultValue": "\\inetpub\\wwwroot\\"
	},
	"CommerceAuthoringServiceName": {
		"Type": "string",
		"Description": "The Commerce Engine postfix for services names"
	},
	"CommerceShopsServiceName": {
		"Type": "string",
		"Description": "The Commerce Engine postfix for services names"
	},
	"CommerceOpsServiceName": {
		"Type": "string",
		"Description": "The Commerce Engine postfix for services names"
	},
	"CommerceMinionsServiceName": {
		"Type": "string",
		"Description": "The Commerce Engine postfix for services names"
	}
  },
  "Variables": {
    "CommerceOps": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceOpsServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceShops": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceShopsServiceName)', parameter('CommerceServicesPostfix')))]",
    "CommerceAuthoring": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceAuthoringServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceMinions": "[concat(parameter('CommerceServicesPrefix'), concat(parameter('CommerceMinionsServiceName'), parameter('CommerceServicesPostfix')))]",
    "CommerceOpsPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceOps')))]",
    "CommerceShopsPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceShops')))]",
    "CommerceAuthoringPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceAuthoring')))]",
    "CommerceMinionsPhysicalPath": "[concat(parameter('SystemDrive'), concat(parameter('WebsiteRootFolder'), variable('CommerceMinions')))]"
  },
  "Modules": ["InitializeCommerce"],
  "Tasks": {
    "ApplyCertificate": {
      "Type": "ApplyCertificate",
      "Params": {
        "EngineConnectIncludeDir": "[parameter('EngineConnectIncludeDir')]",
        "CertificatePath": "[parameter('CertificatePath')]",
        "CommerceServicesPathCollection": [
          "[variable('CommerceOpsPhysicalPath')]",
          "[variable('CommerceShopsPhysicalPath')]",
          "[variable('CommerceAuthoringPhysicalPath')]",
          "[variable('CommerceMinionsPhysicalPath')]"
        ]
      }
    },
    "UpdateShopsPort": {
      "Type": "UpdateShopsPort",
      "Params": {
        "EngineConnectIncludeDir": "[parameter('EngineConnectIncludeDir')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]"
      }
    }
  }
}