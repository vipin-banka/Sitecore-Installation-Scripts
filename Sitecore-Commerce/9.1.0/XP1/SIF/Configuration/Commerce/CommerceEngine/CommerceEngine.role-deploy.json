{
  "Parameters": {
    "CommerceEngineCertificateName": { "Type": "string", "Description": "The Commerce Engine certificate name for communication between Engine and Storefront." },
    "CommerceInstallRoot": { "Type": "string", "Description": "The root path of commerce services." },
    "CommerceServicesDbServer": { "Type": "string", "Description": "Commerce Engine database server name" },		
    "CommerceServicesDbName": { "Type": "string", "Description": "Commerce Services database name" },
    "CommerceServicesGlobalDbName": { "Type": "string", "Description": "Commerce Services Global database name" },
    "CommerceServicesPostfix": { "Type": "string", "Description": "The Commerce Engine postfix for services names"},
    "CommerceServicesHostPostfix": { "Type": "string", "DefaultValue": "", "Description": "The postfix for Commerce Engine services host names" },
    "CommerceSearchProvider": { "Type": "string", "Description": "The search provider used for the Commerce Engine - Accepted values are 'SOLR' and 'AZURE'" },
    "SolrUrl": { "Type": "string", "DefaultValue": "https://localhost:8992/solr", "Description": "The Solr instance url." },
    "SearchIndexPrefix": { "Type": "string", "DefaultValue": "", "Description": "The search index prefix." },
    "EnvironmentsPrefix": { "Type": "string", "Description":  "The environments name prefix."  },
    "AzureSearchServiceName": { "Type": "string", "DefaultValue": "", "Description": "The Azure search service name." },
    "AzureSearchAdminKey": { "Type": "string", "DefaultValue": "", "Description": "The Azure search service admin key." },
    "AzureSearchQueryKey": { "Type": "string", "DefaultValue": "", "Description": "The Azure search service query key." },
    "SiteHostHeaderName": { "Type": "string", "Description": "The host header name of the Sitecore site." },
    "CommerceAuthoringServicesPort": { "Type": "string", "Description": "CommerceAuthoring Services Port" },
    "SitecoreBizFxPort": { "Type": "string", "Description": "Sitecore BizFx Server port" },
    "SitecoreCommerceEnginePath": { "Type": "string", "Description": "Sitecore Commerce Engine Path" },
    "UserDomain": { "Type": "string", "DefaultValue": "$env:COMPUTERNAME" },
    "UserName": { "Type": "string", "Description": "User Name for Commerce Services App Pool" },
    "UserPassword": { "Type": "string", "Description": "User Password for Commerce Services App Pool" },
    "BraintreeAccount": { "Type": "psobject", "DefaultValue": {"MerchantId": "", "PublicKey": "", "PrivateKey": ""}, "Description": "Braintree account for Payment plugin." },
    "BaseConfigurationFolder": { "Type": "string", "Description": "The base folder for SIF configuration." },
    "SitecoreIdentityServerUrl": { "Type": "string", "Description": "Sitecore Identity Server Url." },
	"CommerceEngineRoleName": { "Type": "string", "Description": "commerce engine role name." },
	"HostPrefix": { "Type": "string", "Description": "commerce engine host prefix." },
	"WebsiteNamePrefix": { "Type": "string", "Description": "commerce engine website name prefix." },
	"WebsitePort": { "Type": "string", "Description": "commerce engine website port." },
	"MinionInstance": { "Type": "string", "Description": "setup is for minion role.", "DefaultValue": "false" },
    "SitecoreConnectionPolicyHostName": {
      "Type": "string",
      "Description": "Hostname of Sitecore that will be used by commerce engine in SitecoreConnectionPolicy."
    },
    "SitecoreConnectionPolicyUserName": {
      "Type": "string",
      "Description": "User name used in SitecoreConnectionPolicy."
    },
    "SitecoreConnectionPolicyUserPassword": {
      "Type": "string",
      "Description": "Password used in SitecoreConnectionPolicy."
    },
    "CommerceEngineAllowedOrigins": {
      "Type": "string[]",
      "Description": "Allowed origins for commerce engine."
    }
  },
  "Variables": {
	"WebsiteName": "[concat(parameter('WebsiteNamePrefix'), parameter('CommerceServicesPostfix'))]",
	"WebsitePhysicalPath": "[joinpath(parameter('CommerceInstallRoot'),  variable('WebsiteName'))]",
    "Client.Cert.Store": "cert:\\LocalMachine\\My",
    "Security.CertificateThumbprint": "[GetCertificateThumbprint(parameter('CommerceEngineCertificateName'), variable('Client.Cert.Store'))]",
    "InstallSiteConfigurationFilePath": "[concat(parameter('BaseConfigurationFolder'), '\\Commerce\\Common\\Commerce.InstallSite.json')]"
  },
  "Modules": [
    "ManageCommerceService",
    "DeployCommerceDatabase",
    "DeployCommerceContent",
    "WindowsLocal",
    "SitecoreUtilityTasks"
  ],
  "Tasks": {    
    "EnsureLocalUser": {
      "Type": "EnsureLocalUser",
      "Params": {
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]"
      }
    },
    "PreconfigureCommerceEngineOpsInstance": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": "[variable('InstallSiteConfigurationFilePath')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "CommerceInstallRoot": "[parameter('CommerceInstallRoot')]",
        "HostPrefix": "[parameter('HostPrefix')]",
        "WebsiteName": "[variable('WebsiteName')]",
        "WebsitePort": "[parameter('WebsitePort')]",
        "UserDomain": "[parameter('UserDomain')]",
        "UserName": "[parameter('UserName')]",
        "UserPassword": "[parameter('UserPassword')]",
		"MinionInstance": "[parameter('MinionInstance')]"
      }
    },
    "DeployOpsCommerceContent": {
      "Type": "DeployCommerceContent",
      "Params": {
        "Name": "[parameter('CommerceEngineRoleName')]",
        "ServicesContentPath": "[parameter('SitecoreCommerceEnginePath')]",
        "PhysicalPath": "[variable('WebsitePhysicalPath')]",
        "CommerceServicesDbServer": "[parameter('CommerceServicesDbServer')]",
        "CommerceServicesDbName": "[parameter('CommerceServicesDbName')]",
        "CommerceServicesGlobalDbName": "[parameter('CommerceServicesGlobalDbName')]",
        "SiteHostHeaderName": "[parameter('SiteHostHeaderName')]",
        "EngineCertificateThumbprint": "[variable('Security.CertificateThumbprint')]",
        "SitecoreBizFxPort": "[parameter('SitecoreBizFxPort')]",
        "CommerceServicesHostPostfix": "[parameter('CommerceServicesHostPostfix')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]",
        "SolrUrl": "[parameter('SolrUrl')]",
        "SearchIndexPrefix": "[parameter('SearchIndexPrefix')]",
        "EnvironmentsPrefix": "[parameter('EnvironmentsPrefix')]",
        "UserName": "[concat(parameter('UserDomain'), concat('\\', parameter('UserName')))]",
        "BraintreeAccount": "[parameter('BraintreeAccount')]",
        "AzureSearchServiceName": "[parameter('AzureSearchServiceName')]",
        "AzureSearchAdminKey": "[parameter('AzureSearchAdminKey')]",
        "AzureSearchQueryKey": "[parameter('AzureSearchQueryKey')]",
        "SitecoreIdentityServerUrl": "[parameter('SitecoreIdentityServerUrl')]",
        "SitecoreConnectionPolicyHostName": "[parameter('SitecoreConnectionPolicyHostName')]",
        "SitecoreConnectionPolicyUserName": "[parameter('SitecoreConnectionPolicyUserName')]",
        "SitecoreConnectionPolicyUserPassword": "[parameter('SitecoreConnectionPolicyUserPassword')]",		
        "CommerceEngineAllowedOrigins": "[parameter('CommerceEngineAllowedOrigins')]"
      }
    },
    "StartOpsAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[variable('WebsiteName')]",
        "Action": "Start"
      }
    },
    "StartOpsWebsite": {
      "Description": "Starts the website.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[variable('WebsiteName')]",
        "Action": "Start"
      }
    },
    "CreatePerformanceCounters": {
      "Type": "CreatePerformanceCounters"
    }
  }
}